before we get to the nitty-gritty of doing speech recognition in Python let's take a moment to talk about how speech recognition works
a full discussion would fill a book so I won't bore you with all the technical details here
in fact this section is not here I can sit to the rest of the tutorial
if you'd like to get straight to the point then feel free to skip ahead
speak recognition has its roots in research done at Bell labs in the early 1950s
early systems were limited to a single speaker and had limited vocabulary of about a dozen words
modern speech recognition systems have come a long way since their ancient counterparts
they can recognize speech from multiple speakers and have enormous vocabularies in numerous languages
the first component of speech recognition is a course speech speech must be converted from physical sound to an electrical signal with a microphone and then to Digital Data with an analog to digital converter
once digitalize several models can be used to transcribe the audio to text
most modern speech recognition systems rely on what is known as a hidden Markov model
this approach works on the assumption that a speech signal when viewed on a short enough time scale can be reasonably approximated as a stationary process that is a process in which statistical properties do not change over time
in a typical hidden Markov model the speak signal is divided into 10 milliseconds fragments
the power spectrum of each fragment which is essentially a plot of the singles power as a function of frequency is map to a vector of real numbers known as set strahl coefficients
the dimension of this back there is usually small sometimes as low as 10 although more accurate systems may have Dimensions 32 or more
the final output of the Hidden Markov model is a sequence of these vectors
Indico the speech into text groups are vectors are matched to one or more from use a fundamental unit of speech
this calculation requires training since the sound of a fonem varies from speaker to speaker and even berries from one other ants to another by the same speaker
a special algorithm is then applied to determine the most likely words that produce the given sequence of phonemes
one can imagine that this whole process maybe computationally expensive
in many modern speech recognition systems networks are used to simplify the speech signal using techniques for feature transformation and dimensionality reduction before hidden Markov model recognition
voice activity detectors are also used to reduce an audio signal to only the portions that are likely to contain speech
this prevents the recognizer from wasting time analyzing unnecessary parts of the signal
fortunately as a python programmer you don't have to worry about any of this
a number of speech recognition services are available for use online through an API and many of these services offer python SDK
