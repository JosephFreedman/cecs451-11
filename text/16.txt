paprika to the nitty-gritty of doing speech recognition python let's take him home to talk about how speech recognition works
a full discussion would fill a book so I won't bore you with all of the technical details here
in fact the section is not prerequisite to the rest of the tutorial
if you'd like to get straight to the point that feel free to skip ahead
speech recognition has its roots in research done at Bell labs in the early 1950s
early systems were limited to single speaker and had limited vocabulary it's about a dozen words
what is speech recognition systems have come a long way since the ancient counterparts
they can recognize speech from multiple speakers and have enormous okay release in numerous languages
the first component of speech recognition is ofcourse speech speech must be converted from physical sound to an electrical signal with the microphone at then to Digital Data with an analog to digital converter
once digitalize several models can be used to transcribe the audio to text
most modern speech recognition systems rely on what is known as a hidden Markov model
approach works on the assumption that its speed signal when viewed on a short enough times go can be reasonably approximated at a stationary process that is a process in which statistical properties do not change over time
in a typical hidden Markov model this be signal is divided into 10 millisecond fragments
the power spectrum of each fragment which is essentially a plot to the signals power as a function of frequency is map to Vector real numbers known as capture coefficients
the dimension of this vectors you she's small sometimes with lowest 10 although more accurate systems may have to mention 32 or more
the final output of the Hidden Markov model is a sequence of these factors
to decode the speech into text groups of vectors are matched to one or more phonemes a fundamental unit of speech
disco chelation requires training set the sound of a phone U varies from speaker to speaker leaving varies from one Ottomans to another by the same speaker
special algorithm and then apply to determine the most likely where's the produce the given sequence of phonemes
next imagine that this whole process may be computationally expensive
in many modern speech recognition systems neural networks are used to simplify the speed signal using techniques are featured transformation and dimensionality reduction for for hidden Markov model recognition
police activity detectors are also used to reduce an audio signal to only the porches that are likely to contain speech
this prevents the recognizer from wasting time analyzing unnecessary parts of the signal
fortunately as a python programmer you don't have to worry about any of this
a number is speech recognition services are available for use online through an API and many of these services offer python sdks
